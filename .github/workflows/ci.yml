name: Run Backend Tests (CI)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")' || mongo --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      fail-fast: false
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Wait for MongoDB
        shell: bash
        run: |
          for i in {1..60}; do
            (echo > /dev/tcp/127.0.0.1/27017) >/dev/null 2>&1 && echo "Mongo is up" && break
            echo "Waiting for MongoDB..."
            sleep 1
          done

      - name: Test with coverage (ESM)
        # test:coverage already sets NODE_OPTIONS=--experimental-vm-modules
        run: npm run test:coverage
        env:
          MONGODB_URI: mongodb://127.0.0.1:27017/dailyfuel_test

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.node-version }}
          path: |
            coverage/
          if-no-files-found: ignore


